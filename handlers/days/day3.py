from aiogram import types, Router, F, Bot
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import any_state
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.answers import Answers
from db.users_stat import Users_stat
from settings import InputMessage
from utils.is_now_day import is_now_day

day_router3 = Router()


@day_router3.callback_query(Text(text="confirm|3"), any_state)
@is_now_day(3)
async def start_again(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    await message.message.edit_reply_markup()
    await state.clear()
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–£–≥—É, –≤—Å–ø–æ–º–Ω–∏–ª", callback_data="REMEMBERED|3"))
    await message.message.answer("–ö–∞–∑–∞–ª–æ—Å—å –±—ã, –≤—Ä–æ–¥–µ –≤—á–µ—Ä–∞ –≤—Å—ë –æ–±—Å—É–¥–∏–ª–∏, –∏ —Ç–∞–º –≤—Å—ë –ø—Ä–µ–¥–µ–ª—å–Ω–æ —è—Å–Ω–æ! –î–∞ –Ω–µ –≤—Å—ë —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ)) "
                         "–ß—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –±–æ—Ä–æ—Ç—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º, –≤–∞–∂–Ω–æ –æ—Å–æ–∑–Ω–∞–≤–∞—Ç—å, –∫–∞–∫ –æ–Ω –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è\n"
                         "–ê –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –æ–Ω –Ω–∞ —Ç—Ä—ë—Ö —É—Ä–æ–≤–Ω—è—Ö:\n"
                         "‚Ä¢—Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º\n‚Ä¢–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º\n‚Ä¢–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–æ–º\n\n"
                         "–° —Ñ–∏–∑–∏–æ–ª–æ–≥–∏–µ–π –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ: –ø—Ä–∏ –æ—Å—Ç—Ä–æ–º —Å—Ç—Ä–µ—Å—Å–µ (—Ç–æ –µ—Å—Ç—å –∫–æ–≥–¥–∞ —Ç—ã –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ "
                         "–Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ —Å—Ç—Ä–µ—Å—Å–æ–≤–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏) –Ω–∞—á–∏–Ω–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –±–∏—Ç—å—Å—è —Å–µ—Ä–¥—Ü–µ, –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å –¥—ã—Ö–∞–Ω–∏–µ, "
                         "–ø–µ—Ä–µ—Å–æ—Ö–Ω—É—Ç—å –≥–æ—Ä–ª–æ, –Ω–∞–ø—Ä—è—á—å—Å—è –º—ã—à—Ü—ã, –º–æ–≥—É—Ç —Ç—Ä—è—Å—Ç–∏—Å—å —Ä—É–∫–∏ (–∏ –µ—â—ë –º–Ω–æ–≥–æ —á–µ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ "
                         "–æ—Ä–≥–∞–Ω–∏–∑–º–∞, –Ω–æ —ç—Ç–æ –Ω–∞—à–µ–º—É –ø—Ä—è–º–æ–º—É –Ω–∞–±–ª—é–¥–µ–Ω–∏—é –Ω–µ –ø–æ–¥–≤–ª–∞—Å—Ç–Ω–æ, –ø–æ—ç—Ç–æ–º—É –º—ã —ç—Ç–æ –∑–¥–µ—Å—å –Ω–µ –æ–±—Å—É–∂–¥–∞–µ–º)\n\n"
                         "–í –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º —É—Ä–æ–≤–Ω–µ —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è 2 –ø–æ–¥—É—Ä–æ–≤–Ω—è: –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏–≤–Ω—ã–π. –ü–µ—Ä–≤—ã–π –ø–æ–¥—É—Ä–æ–≤–µ–Ω—å "
                         "–≤–∫–ª—é—á–∞–µ—Ç –ø–µ—Ä—Ü–µ–ø—Ç–∏–≤–Ω—ã–µ –∏ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã. –ü–æ–º–Ω–∏—à—å, –º—ã –≤—á–µ—Ä–∞ –≥–æ–≤–æ—Ä–∏–ª–∏ –æ —Ç–æ–º, —á—Ç–æ –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ç—Ä–µ–≤–æ–≥–∏ "
                         "—Å–æ–∑–Ω–∞–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞—Ü–∏–∫–ª–∏—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –º—ã—Å–ª–∏, –∞ –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω–∏–º–∞–Ω–∏—è, "
                         "–ø–∞–º—è—Ç–∏, –º—ã—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –º–æ–≥—É—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏—Ç—å—Å—è?) –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ —ç—Ç–æ. "
                         "–†–µ—Ñ–ª–µ–∫—Å–∏–≤–Ω—ã–π –∂–µ –ø—Ä–æ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é :) –ù–æ –Ω–µ —Ç–æ–ª—å–∫–æ. –ù–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ —Ç–æ, —á—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –ø—Ä–æ —Å–∏—Ç—É–∞—Ü–∏—é –∏ "
                         "—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–æ –∏ —Ç–æ, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫–∞—è —É —Ç–µ–±—è –º–æ—Ç–∏–≤–∞—Ü–∏—è‚Ä¶–ï—â—ë –Ω–µ –∑–∞–ø—É—Ç–∞–ª—Å—è? "
                         "–ï—Å–ª–∏ –∑–∞–ø—É—Ç–∞–ª—Å—è, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –æ—Ç—Ä–∞–±–æ—Ç–∞–µ–º –≤—Å—ë –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ\n\n"
                         "–¢—Ä–µ—Ç–∏–π —É—Ä–æ–≤–µ–Ω—å, –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π, –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É –ø—Ä–æ—Ü–µ—Å—Å–∞. –¢–æ –µ—Å—Ç—å —Ç–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å, "
                         "–Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç–æ—á–Ω–æ –∏ —Å–∫–æ—Ä–æ. –≠—Ç–æ –≤—Å—ë –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n\n"
                         "–ù—É –∞ —Ç–µ–ø–µ—Ä—å –Ω–∞—à–∞ –ª—é–±–∏–º–∞—è —Ä—É–±—Ä–∏–∫–∞ ‚Äú–≤—Å–ø–æ–º–Ω–∏—Ç—å –≤—Å—ë‚ÄùüòÅ\n"
                         "–í—Å–ø–æ–º–Ω–∏, –∫–æ–≥–¥–∞ —Ç—ã –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –∏—Å–ø—ã—Ç—ã–≤–∞–ª —Å—Ç—Ä–µ—Å—Å (=—Å—Ç–∞–ª–∫–∏–≤–∞–ª—Å—è —Å–æ —Å–ª–æ–∂–Ω–æ–π –∏–ª–∏/–∏ –∑–Ω–∞—á–∏–º–æ–π –∑–∞–¥–∞—á–µ–π), "
                         "–º–æ–∂–µ—Ç –±—ã—Ç—å —ç—Ç–æ –±—ã–ª–æ –¥–∞–∂–µ —Å–µ–≥–æ–¥–Ω—è", reply_markup=keyboard.as_markup())


@day_router3.callback_query(Text(text="REMEMBERED|3"))
@is_now_day(3)
async def remembered(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    question = await message.message.answer("–û–ø–∏—à–∏, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ —Å —Ç–≤–æ–∏–º —Ç–µ–ª–æ–º –≤ —Ç–æ—Ç –º–æ–º–µ–Ω—Ç")
    await state.set_state(InputMessage.input_answer_state3_1)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router3.message(F.text, InputMessage.input_answer_state3_1)
@is_now_day(3)
async def answer_remembered1(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    question = await message.answer("–£–≥—É, –∞ –∫–∞–∫–∏–µ –º—ã—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–∞–ª–∏?")
    await state.set_state(InputMessage.input_answer_state3_2)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router3.message(F.text, InputMessage.input_answer_state3_2)
@is_now_day(3)
async def answer_remembered2(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    question = await message.answer("–ê —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª? –ö–∞–∫–∞—è —ç–º–æ—Ü–∏—è –±—ã–ª–∞? (–ó–∞–º–µ—Ç—å, —ç–º–æ—Ü–∏—è ‚Äî –Ω–µ –º—ã—Å–ª—å, –Ω–µ —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏, "
                         "—ç—Ç–æ –æ—â—É—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–æ –Ω–∞–∑–≤–∞—Ç—å, –Ω–æ —Ç—ã –≤—Å—ë-—Ç–∞–∫–∏ –ø–æ–ø—Ä–æ–±—É–π)")
    await state.set_state(InputMessage.input_answer_state3_3)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router3.message(F.text, InputMessage.input_answer_state3_3)
@is_now_day(3)
async def answer_remembered3(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    question = await message.answer("–ò–∏–∏, –ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, —á—Ç–æ —Ç—ã —Å–¥–µ–ª–∞–ª?")
    await state.set_state(InputMessage.input_answer_state3_4)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router3.message(F.text, InputMessage.input_answer_state3_4)
@is_now_day(3)
async def answer_remembered4(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    await message.answer("–£—Ö, –Ω–µ –ª—ë–≥–∫—É—é —Ä–∞–±–æ—Ç—É —Ç—ã —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ–¥–µ–ª–∞–ª! –°—Ç–æ–ª—å–∫–æ –≤–Ω–∏–º–∞–Ω–∏—è —Å–≤–æ–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é —É–¥–µ–ª–∏–ª! "
                         "–ê –º—ã —Ç–µ–±–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏ –ø—Ä–æ —Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–∞ (—Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π, "
                         "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π). –ò –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã –±–æ—Ä–æ—Ç—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º. "
                         "–ò —ç—Ç–æ –¥–∞–ª—å—à–µ –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ! –ù–µ –ø–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ—Å—åüòÑ")
    await state.clear()
    user = Users_stat(message.from_user.id)
    await user.edit_user_end_day()
