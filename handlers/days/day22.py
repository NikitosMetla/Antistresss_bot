from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import any_state
from aiogram.types import InlineKeyboardButton, CallbackQuery
from aiogram import types, Bot, F, Router
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.answers import Answers
from db.feed_back import FEED_BACK
from db.users import Users
from db.users_stat import Users_stat
from handlers.user_handlers import start_LLIC, start_statement_next_days
from settings import InputMessage, sticker_ids
from utils.is_now_day import is_now_day

day_router22 = Router()

@day_router22.callback_query(Text(text="confirm|22"), any_state)
@is_now_day(22)
async def not_sad_day22(message: CallbackQuery, state: FSMContext, bot: Bot):
    await message.message.edit_reply_markup()
    await state.clear()
    await message.message.answer("–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Ü–µ–ª—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø–æ—Å—Ç–∞–≤–∏–ª –≤—á–µ—Ä–∞. –ö–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –µ—ë?")
    await state.set_state(InputMessage.input_answer_state22_1)


@day_router22.message(F.text, InputMessage.input_answer_state22_1)
@is_now_day(22)
async def answer_day22_1(message: types.Message, state: FSMContext, bot: Bot):
    question = await message.answer("–ê–≥–∞, —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ. –ö–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã —Ç—ã –≤—ã–±–∏—Ä–∞–µ—à—å –∏ –∫–æ–≥–¥–∞/–∫–∞–∫ —á–∞—Å—Ç–æ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? –ü—Ä–æ–ø–∏—à–∏ –ø–æ –ø—É–Ω–∫—Ç–∞–º")
    await state.set_state(InputMessage.input_answer_state22_2)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router22.message(F.text, InputMessage.input_answer_state22_2)
@is_now_day(22)
async def answer_day22_2(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    question = await message.answer("–ö–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ —Ç—ã —Å–º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ—Ç –ø–ª–∞–Ω?")
    await state.set_state(InputMessage.input_answer_state22_3)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router22.message(F.text, InputMessage.input_answer_state22_3)
@is_now_day(22)
async def answer_day22_3(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    question = await message.answer("–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å, —á—Ç–æ–±—ã —ç—Ç–∏ –ø–æ–º–µ—Ö–∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∏–ª–∏ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö —É—â–µ—Ä–±?")
    await state.set_state(InputMessage.input_answer_state22_4)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router22.message(F.text, InputMessage.input_answer_state22_4)
@is_now_day(22)
async def answer_day22_4(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    question = await message.answer("–ß—Ç–æ –µ—â—ë –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç–µ–±–µ –±—ã–ª–æ –ª–µ–≥—á–µ –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏?")
    await state.set_state(InputMessage.input_answer_state22_21)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router22.message(F.text, InputMessage.input_answer_state22_21)
@is_now_day(22)
async def answer_day22_5(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    await state.clear()
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –ø–ª–∞–Ω) –û—Å—Ç–∞–ª–æ—Å—å –µ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è")
    await message.answer_sticker(sticker=sticker_ids[6])
    await message.answer("–í–æ—Ç –∏ –ø–æ–¥–æ—à–ª–∞ –Ω–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∫ –∫–æ–Ω—Ü—É! –î–∞–≤–∞–π –æ–±—Å—É–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã)\n–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤—Å–ª–µ–¥—Å—Ç–≤–∏–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã?")
    await state.set_state(InputMessage.input_answer_state22_6)


@day_router22.message(F.text, InputMessage.input_answer_state22_6)
@is_now_day(22)
async def answer_day22_6(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().add_new_user(message.from_user.id)
    await FEED_BACK().question1(message.from_user.id, message.text)
    await message.answer("–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤ —Ç–≤–æ–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏?")
    await state.set_state(InputMessage.input_answer_state22_7)


@day_router22.message(F.text, InputMessage.input_answer_state22_7)
@is_now_day(22)
async def answer_day22_7(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question2(message.from_user.id, message.text)
    await message.answer("–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤ —Ç–≤–æ–µ–º —Å–∞–º–æ–æ—â—É—â–µ–Ω–∏–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –∏ –ø–æ—Å–ª–µ –Ω–∏—Ö?")
    await state.set_state(InputMessage.input_answer_state22_8)


@day_router22.message(F.text, InputMessage.input_answer_state22_8)
@is_now_day(22)
async def answer_day22_8(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question3(message.from_user.id, message.text)
    await message.answer("–ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã —Ç–µ–±—è –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏, —Ç—ã –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?")
    await state.set_state(InputMessage.input_answer_state22_9)


@day_router22.message(F.text, InputMessage.input_answer_state22_9)
@is_now_day(22)
async def answer_day22_9(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question4(message.from_user.id, message.text)
    keyboard = InlineKeyboardBuilder().row(
        InlineKeyboardButton(text="1", callback_data="progress_rating|1"),
        InlineKeyboardButton(text="2", callback_data="progress_rating|2"),
        InlineKeyboardButton(text="3", callback_data="progress_rating|3"),
        InlineKeyboardButton(text="4", callback_data="progress_rating|4"),
        InlineKeyboardButton(text="5", callback_data="progress_rating|5"),
        InlineKeyboardButton(text="6", callback_data="progress_rating|6"),
        InlineKeyboardButton(text="7", callback_data="progress_rating|7"),
    )
    await message.answer("–ö–∞–∫ —Ç—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ —Å–æ–≤–ª–∞–¥–∞–Ω–∏–∏ —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 7, –≥–¥–µ 7 ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ?", reply_markup=keyboard.as_markup())


@day_router22.callback_query(Text(startswith="progress_rating|"))
@is_now_day(22)
async def progress_rating_day22(message: CallbackQuery, state: FSMContext, bot: Bot):
    rating = int(message.data.split("|")[1])
    await FEED_BACK().question5(message.from_user.id, rating)
    await Users().user_self_progress(self_progress=rating, user_id=message.from_user.id)
    await message.message.answer("–õ—é–±–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç —Ç–µ–±—è‚úçÔ∏è")
    await message.message.edit_reply_markup()
    await state.set_state(InputMessage.input_answer_state22_11)


@day_router22.message(F.text, InputMessage.input_answer_state22_11)
@is_now_day(22)
async def answer_day22_11(message: types.Message, state: FSMContext, bot: Bot):
    await state.clear()
    await FEED_BACK().question6(message.from_user.id, message.text)
    await message.answer("–ö–ª–∞—Å—Å! –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Å–∫–∞–∂—É—Ç –º–µ—Ç–æ–¥–∏–∫–∏ –æ —Ç–≤–æ–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏üëá")
    await start_LLIC(message, state, bot)


@day_router22.message(F.text, InputMessage.input_answer_state22_100)
@is_now_day(22)
async def answer_day22_11(message: types.Message, state: FSMContext, bot: Bot):
    await state.clear()
    await FEED_BACK().question0(message.from_user.id, message.text)
    await start_statement_next_days(message, state, bot)


@day_router22.callback_query(Text(startswith="answer|23"))
@is_now_day(22)
async def progress_rating_day22(message: CallbackQuery, state: FSMContext, bot: Bot):
    await FEED_BACK().question7(message.from_user.id, message.data[9:])
    await message.message.answer("–ß—Ç–æ —Ç—ã –∑–∞–º–µ—á–∞–ª –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü? ")
    await state.set_state(InputMessage.input_answer_state22_20)


@day_router22.message(F.text, InputMessage.input_answer_state22_20)
@is_now_day(22)
async def answer_day22_11(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question8(message.from_user.id, message.text)
    await message.answer("–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤ —Ç–≤–æ–µ–º —Å–∞–º–æ–æ—â—É—â–µ–Ω–∏–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –∏ –ø–æ—Å–ª–µ –Ω–∏—Ö?")
    await state.set_state(InputMessage.input_answer_state22_12)


@day_router22.message(F.text, InputMessage.input_answer_state22_12)
@is_now_day(22)
async def answer_day22_11(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question9(message.from_user.id, message.text)
    await message.answer("–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤ —Ç–≤–æ–µ–º —Å–∞–º–æ–æ—â—É—â–µ–Ω–∏–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ –≤ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –∏ –ø–æ—Å–ª–µ –Ω–∏—Ö?")
    await state.set_state(InputMessage.input_answer_state22_13)


@day_router22.message(F.text, InputMessage.input_answer_state22_13)
@is_now_day(22)
async def answer_day22_11(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question10(message.from_user.id, message.text)
    await message.answer("–ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã —Ç–µ–±—è –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏, —Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª?")
    await state.set_state(InputMessage.input_answer_state22_14)


@day_router22.message(F.text, InputMessage.input_answer_state22_14)
@is_now_day(22)
async def answer_day22_11(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question11(message.from_user.id, message.text)
    await message.answer("–õ—é–±–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç —Ç–µ–±—è‚úçÔ∏è")
    await state.set_state(InputMessage.input_answer_state22_15)


@day_router22.message(F.text, InputMessage.input_answer_state22_15)
@is_now_day(22)
async def answer_day22_11(message: types.Message, state: FSMContext, bot: Bot):
    await FEED_BACK().question12(message.from_user.id, message.text)
    await message.answer("–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª —Å –Ω–∞–º–∏ –≤—Å—ë —ç—Ç–æ –≤—Ä–µ–º—è ‚ù§Ô∏è –•–æ—Ä–æ—à–µ–≥–æ —Å–∞–º–æ–æ—â—É—â–µ–Ω–∏—è –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—èüëê")
    await state.clear()



@day_router22.message(Text(text="/contact_us"))
async def start(message: types.Message, state: FSMContext, bot: Bot):
    await state.set_state(InputMessage.connect_us)
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_answer"))
    answer = await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ", reply_markup=keyboard.as_markup())
    await state.update_data(message_id=answer.message_id)
