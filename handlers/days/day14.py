import asyncio
from datetime import datetime, timedelta

from aiogram import types, Dispatcher, Router, F, Bot
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import any_state
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.answers import Answers
from db.users_stat import Users_stat
from handlers.user_handlers import start_LLIC
from settings import InputMessage, sticker_ids
from utils.is_now_day import is_now_day

day_router14 = Router()


@day_router14.callback_query(Text(text="confirm|14"), any_state)
@is_now_day(14)
async def start_day14(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    if int(await Users_stat(message.from_user.id).get_user_day()) == int(message.data.split("|")[1]):
        await state.clear()
        await message.message.answer("–û—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–µ –∏ –≥–¥–µ-—Ç–æ –¥–∞–∂–µ —Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã–µ –≤–µ—â–∏, –∫ –∫–æ—Ç–æ—Ä—ã–º –º—ã –∑–∞—á–∞—Å—Ç—É—é –æ—Ç–Ω–æ—Å–∏–º—Å—è –Ω–µ—Å–µ—Ä—å–µ–∑–Ω–æ. –ù–∞ –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–µ —Ç—ã –∑–∞–Ω–∏–º–∞–ª—Å—è —Ç–µ–º, —á—Ç–æ –æ–±—Ä–∞—â–∞–ª "
                                     "–≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ —É —Ç–µ–±—è –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ. –ü–æ—Å–º–æ—Ç—Ä–∏, –º–æ–∂–µ—à—å –ª–∏ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —ç—Ç–∏—Ö —Å—Ç—Ä–µ—Å—Å-—Ñ–∞–∫—Ç–æ—Ä–æ–≤ –∏–ª–∏ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö? –ù–µ –æ—Ç–º–∞—Ö–∏–≤–∞–π—Å—è –æ—Ç —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞. "
                                     "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –±—ã—Ç—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º. –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–±–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è/—Å–æ–∑–≤–∞–Ω–∏–≤–∞—Ç—å—Å—è —Å —Ä–∞–∑–¥—Ä–∞–∂–∞—é—â–∏–º —Ç–µ–±—è –∫–æ–ª–ª–µ–≥–æ–π –∏ –º–æ–∂–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è "
                                     "–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å—ã–≤–∞—Ç—å —á—Ç–æ-–ª–∏–±–æ\n"
                                     "–ú–æ–∂–µ—Ç –¥–æ–π—Ç–∏ –¥–∞–∂–µ –¥–æ —Å–æ–≤—Å–µ–º –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–≥–æ: —Ç–µ–±—è —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç —Å–ª–æ–º–∞–Ω–Ω—ã–π —Ä–µ–º–µ–Ω—å –Ω–∞ –ª—é–±–∏–º–æ–º —Ä—é–∫–∑–∞–∫–µ –∏ —Ç—ã —Ç–µ—Ä–ø–∏—à—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ —Ö–æ—á–µ—à—å –µ–≥–æ –º–µ–Ω—è—Ç—å. "
                                     "–ú–æ–∂–µ—Ç –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ —Å–ª–æ–º–∞–Ω–Ω—É—é –¥–µ—Ç–∞–ª—å –∏ –∑–∞–º–µ–Ω–∏—Ç—å –µ—ë? –≠—Ç–æ –≤–µ–¥—å –Ω–µ –∑–∞–π–º—ë—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏\n"
                                     "–í—ã–ø–∏—à–∏ —Å–µ–π—á–∞—Å –ø—Ä–∏—á–∏–Ω—ã –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏ —Ç–æ, –∫–∞–∫–∏–µ —à–∞–≥–∏ —Ç—ã –ø—Ä–µ–¥–ø—Ä–∏–º–µ—à—å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å/–º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö:")
        await state.set_state(InputMessage.input_answer_state14_1)


@day_router14.message(F.text, InputMessage.input_answer_state14_1)
@is_now_day(14)
async def answer_day14_1(message: types.Message, state: FSMContext, bot: Bot):
    await message.answer_sticker(sticker=sticker_ids[0])
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢–∞–∫ –∏—Ö))\n\n"
                         "–°–ª–µ–¥—É—é—â–∏–º –ø—É–Ω–∫—Ç–æ–º, —Å–∞–º—ã–º –±–∞–Ω–∞–ª—å–Ω—ã–º –∏–∑ –±–∞–Ω–∞–ª—å–Ω—ã—Ö, –Ω–æ –∫—Ä–∞–π–Ω–µ –≤–∞–∂–Ω—ã–º, —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–ª–∞–∂–µ–Ω–Ω—ã–µ –ø–∏—Ç—å–µ–≤–æ–π —Ä–µ–∂–∏–º –∏ —Ä–µ–∂–∏–º –ø–∏—Ç–∞–Ω–∏—è. "
                         "–£–±–µ–≥–∞–µ—à—å —Å —É—Ç—Ä–∞ –Ω–µ –ø–æ–∑–∞–≤—Ç—Ä–∞–∫–∞–≤? –ü—Ä–æ–ø—É—Å–∫–∞–µ—à—å –æ–±–µ–¥ –∏–ª–∏ —É–∂–∏–Ω, –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∂—É—è —Å—ç–Ω–¥–≤–∏—á –ø–æ –¥–æ—Ä–æ–≥–µ? "
                         "–û—Ç–º–∞—Ö–∏–≤–∞–µ—à—å—Å—è –æ—Ç –∂–∞–∂–¥—ã –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –≤—Å—ë –≤—Ä–µ–º—è –∑–∞–±—ã–≤–∞–µ—à—å –∫—É–ø–∏—Ç—å –≤–æ–¥—ã —Å —Å–æ–±–æ–π –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç? –ü–æ—Å—Ç–∞–≤—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ. "
                         "–í—ã–¥–µ–ª–∏ ‚Äú—Å–≤—è—â–µ–Ω–Ω–æ–µ‚Äù –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–∏–µ–º—ã –ø–∏—â–∏. –ï–¥–∞ –∏ –≤–æ–¥–∞ ‚Äî –Ω–∞—à–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏. "
                         "–í –º–æ–º–µ–Ω—Ç–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –∏ –±–µ–∑ –µ–¥—ã –º–æ–∂–Ω–æ –ø—Ä–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è, –Ω–æ –∑–∞–∫–æ–Ω—á–∏—Ç—å —Å –∑–∞–¥–∞—á–µ–π –±—ã—Å—Ç—Ä–µ–µ. –ú—ã –Ω–µ –∑–∞–º–µ—á–∞–µ–º, –∫–∞–∫ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ "
                         "–Ω–∞—á–∏–Ω–∞–µ–º –º–µ–¥–ª–µ–Ω–Ω–µ–µ —Å–æ–æ–±—Ä–∞–∂–∞—Ç—å, –∞ —Å–∏–ª —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤—Å—ë –º–µ–Ω—å—à–µ. –ü—Ä–æ—Å—Ç–æ –≤ –∫–∞–∫–æ–π-—Ç–æ –¥–µ–Ω—å —Ä–∞–∑ –∏ —Å–∏–ª –Ω–∏ –Ω–∞ —á—Ç–æ –Ω–µ—Ç\n"
                         "–ò—Ç–∞–∫, –∫–∞–∫–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –ø–∏—Ç—å–µ–≤–æ–π —Ä–µ–∂–∏–º –∏–ª–∏ —Ä–µ–∂–∏–º –ø–∏—Ç–∞–Ω–∏—è?")
    await state.set_state(InputMessage.input_answer_state14_2)


@day_router14.message(F.text, InputMessage.input_answer_state14_2)
@is_now_day(14)
async def answer_day14_2(message: types.Message, state: FSMContext, bot: Bot):
    await state.clear()
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–ò–¥—É –¥–µ–ª–∞—Ç—å", callback_data="Start_doing|14"))
    keyboard.row(InlineKeyboardButton(text="–ü–æ—Å—Ç–∞–≤–∏–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="Start_doing|14"))
    await message.answer("–•–æ—Ä–æ—à–æ) –¢–æ–ª—å–∫–æ –ø–æ–æ–±–µ—â–∞–π —Å–µ–±–µ, —á—Ç–æ —Å–¥–µ–ª–∞–µ—à—å!\n\n"
                         "–ö—Ä–æ–º–µ —Ç–æ–≥–æ, —Ç—ã –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ —Å–ª—ã—à–∞–ª –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ —Å–Ω–∞, —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫ –∏ –ø—Ä–æ–≥—É–ª–æ–∫ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ. –ù–∞–ª–∞–∂–µ–Ω –ª–∏ —É —Ç–µ–±—è —Ä–µ–∂–∏–º –∏–ª–∏ –¥–µ–Ω—å –Ω–∞ –¥–µ–Ω—å –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è? "
                         "–ú—ã –Ω–µ –±—É–¥–µ–º –Ω–∞ —ç—Ç–æ–º –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è, –Ω–æ –≤–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ —Ç–µ–ª–æ ‚Äî —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –ø—Å–∏—Ö–∏–∫–∏ –∏ —ç—Ç–∏ –∞—Å–ø–µ–∫—Ç—ã –Ω–µ–ª—å–∑—è –æ—Å—Ç–∞–≤–ª—è—Ç—å –≤ —Å—Ç–æ—Ä–æ–Ω–µ\n\n"
                         "–°–ª–µ–¥—É—é—â–∏–π –ø—É–Ω–∫—Ç ‚Äî –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ª—é–¥–∏ —É–¥–µ–ª—è—é—Ç –º–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è –æ–±—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞, "
                         "–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ–±—Ä–∞—â–∞—é—Ç –Ω–∞ —ç—Ç–æ –≤–Ω–∏–º–∞–Ω–∏—è. –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –≤–∞–∂–Ω–æ –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –≤–æ–∫—Ä—É–≥ (–¥–∞ –¥–∞, –º—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ–º –≤ –≤–∞–∫—É—É–º–µ –∏ –æ–Ω–æ —Ç–∞–∫ –∏–ª–∏ –∏–Ω–∞—á–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –Ω–∞—Å). "
                         "–ò —ç—Ç–æ –Ω–µ —Å—Ç–æ–ª—å–∫–æ –ø—Ä–æ –¥–∏–∑–∞–π–Ω (—Ö–æ—Ç—è –Ω–∏–∫—Ç–æ –Ω–µ —Å—Ç–∞–Ω–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç—å, —á—Ç–æ –≥–∏—Ä–ª—è–Ω–¥—ã –≤ –ø—Ä–µ–¥–¥–≤–µ—Ä–∏–∏ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –ø–æ—è–≤–ª–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è), "
                         "—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ —É–¥–æ–±—Å—Ç–≤–æ (–∏ –ø–æ—Ä—è–¥–æ–∫, –∫–æ–Ω–µ—á–Ω–æüòÑ)\n\n"
                         "–ö—Å—Ç–∞—Ç–∏, –ø–æ—Ä—è–¥–æ–∫ –≤–æ –≤–Ω–µ—à–Ω–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –º–æ–∂–µ—Ç —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–æ—Ä—è–¥–∫–∞ –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ —ç—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, "
                         "–æ—Ä–≥–∞–Ω–∏–∑—É—é—â–∏—Ö —Ç–≤–æ—é —Ä–∞–±–æ—Ç—É (–∫–∞–ª–µ–Ω–¥–∞—Ä–∏, –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –∏ –¥—Ä.), –Ω–æ —ç—Ç–æ —Ç—ã, –∫–æ–Ω–µ—á–Ω–æ, –∏ –±–µ–∑ –Ω–∞—Å –∑–Ω–∞–µ—à—å (–Ω–∞–¥–µ–µ–º—Å—èüòÖ)\n\n"
                         "–°–µ–≥–æ–¥–Ω—è —Ç—ã —É–π–¥–µ—à—å –∏–∑ –±–æ—Ç–∞ —Å –∑–∞–¥–∞–Ω–∏–µ–º ‚Äî –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–µ–∂–∏–º –≤–∑–≥–ª—è–¥–æ–º –Ω–∞ —Å–≤–æ—ë —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ –∏ –ø–æ–¥—É–º–∞—Ç—å, –∞ –≤—Å—ë –ª–∏ —Å –Ω–∏–º —Ö–æ—Ä–æ—à–æ? "
                         "–ù–µ —Ä–∞–∑–¥—Ä–∞–∂–∞—é—Ç –ª–∏ —Ç–µ–±—è –ø—Ä–æ–≤–æ–¥–∞, —Ç–æ—Ä—á–∞—â–∏–µ —Ç—É—Ç –∏ —Ç–∞–º? –£–¥–æ–±–Ω–æ –ª–∏ —Ç–µ–±–µ —Å–∏–¥–µ—Ç—å –Ω–∞ —Å—Ç—É–ª–µ –∏–ª–∏ –º—ã—à—Ü—ã –∑–∞—Ç–µ–∫–∞—é—Ç —É–∂–µ —á–µ—Ä–µ–∑ 20 –º–∏–Ω—É—Ç? "
                         "–õ–µ–≥–∫–æ –ª–∏ –¥–æ—Å—Ç–∞–≤–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Ç—è–Ω—É—Ç—å—Å—è —á–µ—Ä–µ–∑ –≤–µ—Å—å —Å—Ç–æ–ª (–∏ —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–¥—É–º—ã–≤–∞–ª—Å—è, —á—Ç–æ –ø—Ä–∞–≤–æ–µ –ø–ª–µ—á–æ –∏–Ω–æ–≥–¥–∞ –Ω–æ–µ—Ç –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É)?\n"
                         "–°–¥–µ–ª–∞–π —Å–µ–π—á–∞—Å, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –∏–ª–∏ –ø–æ—Å—Ç–∞–≤—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–æ —Å–¥–µ–ª–∞–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–µ–≥–æ–¥–Ω—è, –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –∫—É—á–∞ –¥—Ä—É–≥–∏—Ö –¥–µ–ª –∏ –∫ —ç—Ç–æ–π –∑–∞–¥–∞—á–∫–µ —Ç—ã —É–∂–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–µ—Ä–Ω—ë—à—å—Å—è",
                         reply_markup=keyboard.as_markup())


@day_router14.callback_query(Text(text="Start_doing|14"))
@is_now_day(14)
async def start_day11(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    now = datetime.now()
    target_time = datetime(now.year, now.month, now.day, 21, 30)
    if now >= target_time:
        target_time += timedelta(days=1)
    time_difference = target_time - now
    await asyncio.sleep(time_difference.total_seconds())
    question = await message.message.answer(
        text="–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä? –ù—É —á—Ç–æ —Ç–∞–º —Å —Ç–≤–æ–∏–º —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–æ–º, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å?")
    await state.set_state(InputMessage.input_answer_state14_4)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router14.message(F.text, InputMessage.input_answer_state14_4)
@is_now_day(14)
async def answer_day14_4(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    await state.clear()
    await message.answer_sticker(sticker=sticker_ids[-2])
    await message.answer("–î–∞–≤–∞–π –µ—â—ë –±—ã—Å—Ç—Ä–µ–Ω—å–∫–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —É —Ç–µ–±—è —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º")
    await start_LLIC(message, state, bot)
