import asyncio
from datetime import datetime, timedelta

from aiogram import types, Dispatcher, Router, F, Bot
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import any_state
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.answers import Answers
from db.users_stat import Users_stat
from handlers.user_handlers import start_LLIC
from settings import InputMessage, sticker_ids
from utils.is_now_day import is_now_day

day_router15 = Router()


@day_router15.callback_query(Text(text="confirm|15"), any_state)
@is_now_day(15)
async def start_day15(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    await message.message.answer("–í–µ—á–µ—Ä–æ–º –≤–µ—Ä–Ω–µ–º—Å—è —Å —Ä–∞—Å—Å–ø—Ä–æ—Å–∞–º–∏üòÑ")
    await state.clear()
    question = await message.message.answer("–ü–æ–≥–æ–≤–æ—Ä–∏–º –æ –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µ —Ç–≤–æ–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ó–∞–¥—É–º—ã–≤–∞–ª—Å—è –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –æ —Ç–æ–º, –∫–∞–∫ –º–æ–∂–µ—à—å –æ–±–ª–µ–≥—á–∏—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É? "
                                 "–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ –≤—Å–µ –ª—é–¥–∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –¥–µ–ª–∞–ª–∏ –±—ã –º–µ–Ω—å—à–µ, –Ω–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –ª—é–¥–µ–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞—á–∏ —Ç–∞–∫, –∫–∞–∫ –æ–Ω–∏ –ø—Ä–∏–≤—ã–∫–ª–∏ —ç—Ç–æ –¥–µ–ª–∞—Ç—å, "
                                 "–∫–∞–∫ –Ω–∞—É—á–∏–ª–∏—Å—å –∏–ª–∏ –∫–∞–∫ –∫—Ç–æ-—Ç–æ –∏—Ö –Ω–∞—É—á–∏–ª. –ú–∞–ª–æ —Ç–æ–≥–æ, —á—Ç–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–≤—à–∏–µ—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è –Ω–µ –≤—Å–µ–≥–¥–∞ –±—ã–≤–∞—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ, "
                                 "—á—Ç–æ –±—É–∫–≤–∞–ª—å–Ω–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –±—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —Ç–≤–æ—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å. "
                                 "–ü—Ä–æ—Ü–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Å—Ç–∏–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∑–∞–Ω–∏–º–∞–µ—Ç –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è, –Ω–æ –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–¥–µ–ª–∞—Ç—å —Å –∑–∞–¥–∞—á–∞–º–∏, –æ—Ç–Ω–∏–º–∞—é—â–∏–º–∏ –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–∏–ª, —ç—Ç–æ –æ–∫—É–ø–∏—Ç—Å—è —Å–ø–æ–ª–Ω–∞. "
                                 "–ö–∞–∫—É—é —á–∞—Å—Ç—å –∏–∑ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã —Ç—ã –±—ã —Ö–æ—Ç–µ–ª <b>–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å?</b>")
    await state.set_state(InputMessage.input_answer_state15_1)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router15.message(F.text, InputMessage.input_answer_state15_1)
@is_now_day(15)
async def answer_day15_1(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    question = await message.answer("–ö–∞–∫ —Ç—ã –º–æ–≥ –±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å?")
    await state.set_state(InputMessage.input_answer_state15_2)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router15.message(F.text, InputMessage.input_answer_state15_2)
@is_now_day(15)
async def answer_day15_2(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    keyboard = InlineKeyboardBuilder()
    await state.clear()
    keyboard.row(InlineKeyboardButton(text="–î–∞, –¥—É–º–∞—é, –æ–Ω–∏ –º–æ–≥—É—Ç —á—Ç–æ-—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å", callback_data="Discussion|15"))
    keyboard.row(InlineKeyboardButton(text="–ù–µ—Ç, —Å–∞–º –∑–Ω–∞—é, —á—Ç–æ –Ω–∞–¥–æ –¥–µ–ª–∞—Ç—å", callback_data="Discussion|15"))
    await message.answer(
        "–•–æ—á–µ—à—å –ª–∏ —Ç—ã –æ–±—Å—É–¥–∏—Ç—å —ç—Ç–æ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏–ª–∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º, —á—Ç–æ–±—ã —É—Å–ª—ã—à–∞—Ç—å –∏—Ö –º–Ω–µ–Ω–∏–µ –∏, –º–æ–∂–µ—Ç –±—ã—Ç—å, —É–∑–Ω–∞—Ç—å –ø—Ä–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?", reply_markup=keyboard.as_markup())


@day_router15.callback_query(Text(text="Discussion|15"))
@is_now_day(15)
async def discussion_day15(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–î–∞, —Ç–∞–∫ —è —Å–º–æ–≥—É –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É", callback_data="Training|15"))
    keyboard.row(InlineKeyboardButton(text="–ù–µ—Ç, —Å–∞–º —Å–ø—Ä–∞–≤–ª—é—Å—å", callback_data="Training|15"))
    await message.message.answer("–ù—É–∂–Ω–æ –ª–∏ —Ç–µ–±–µ –ø—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –æ—Å–≤–æ–µ–Ω–∏—è –∫–∞–∫–∏—Ö-—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤?", reply_markup=keyboard.as_markup())


@day_router15.callback_query(Text(text="Training|15"))
@is_now_day(15)
async def training_day15(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    await state.clear()
    await message.message.answer_sticker(sticker=sticker_ids[-7])
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–ü–æ—Å—Ç–∞–≤–∏–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="Reminder|15"))
    await message.message.answer("–û—Ç–ª–∏—á–Ω–æ! –î–æ–ø—É—Å—Ç–∏–º, —Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–¥–∞—á, —á—Ç–æ –µ—â—ë —Ç–µ–±–µ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å? "
                                 "<b>–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π –∏ —Ñ–æ—Ä–º –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–Ω—è—Ç–æ—Å—Ç–∏</b>\n"
                                 "–í—Å–µ –º—ã —É—Å—Ç–∞–µ–º –æ—Ç –æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–π —Ä–∞–±–æ—Ç—ã, –∫—Ç–æ-—Ç–æ –±—ã—Å—Ç—Ä–µ–µ, –∫—Ç–æ-—Ç–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–¥–∞—á–∏, –Ω–∞–ø—Ä—è–≥–∞—è—Å—å –µ—â—ë —Å–∏–ª—å–Ω–µ–µ. "
                                 "–ß—Ç–æ–±—ã —ç—Ç–æ–≥–æ –∏–∑–±–µ–∂–∞—Ç—å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —Å–æ–±–æ–π –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å, –≤ –∫–∞–∫–æ–π –º–æ–º–µ–Ω—Ç –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —É—Ç–æ–º–ª–µ–Ω–∏–µ –æ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∂–µ–ª–∞–Ω–∏–µ –µ—ë —Å–º–µ–Ω–∏—Ç—å. "
                                 "–î–∞–∂–µ –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏ –∑–∞—á–∞—Å—Ç—É—é –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∞ —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –∏—Ö –º–µ–Ω—è—Ç—å. "
                                 "–ö–æ–≥–¥–∞ —Ç—ã —Å—Ç–∞–Ω–µ—à—å –ø–æ–Ω–∏–º–∞—Ç—å, —á–µ—Ä–µ–∑ –∫–∞–∫–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å–º–µ–Ω—è—Ç—å –∫–∞–∂–¥—É—é –∏–∑ –∑–∞–¥–∞—á, —É—á–∏—Ç—ã–≤–∞–π —ç—Ç–æ—Ç –∞—Å–ø–µ–∫—Ç –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∏ —É—á–µ–±—ã üòâ",
                                 reply_markup=keyboard.as_markup())


@day_router15.callback_query(Text(text="Reminder|15"))
@is_now_day(15)
async def reminder_day15(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–ë—É–¥—É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—åüòå", callback_data="Balance|15"))
    await message.message.answer("–•–æ—Ä–æ—à–æ) –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—É–Ω–∫—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ‚Äî <b>—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å —Ä–µ–∂–∏–º–æ–≤ —Ç—Ä—É–¥–∞ –∏ –æ—Ç–¥—ã—Ö–∞</b>. "
                                 "–ï—Å–ª–∏ –≤—Ä–µ–º—è —Ç–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –∏ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤ –Ω–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ—Å–ª–µ–¥–∏, –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –ª–∏ —Ç—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—à—å –Ω–∞–≥—Ä—É–∑–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≥–¥–µ-—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ—Ä—ã–≤—ã, "
                                 "–ø–æ—Ä–∞–Ω—å—à–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å –∏–ª–∏ –≤ —Ü–µ–ª–æ–º –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–æ–¥–∏—Ç—å –Ω–∞ –æ—Ç–¥—ã—Ö. "
                                 "–ù–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ –æ—Ç–¥—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–≤–æ–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤, –∞ —Ä–∞–±–æ—Ç–∞ –Ω–∞ –∏–∑–Ω–æ—Å –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –∏—Å—Ç–æ—â–µ–Ω–∏—é üò¢ "
                                 "–í–µ–¥—å –µ—Å–ª–∏ —Ç—ã –Ω–µ –±—É–¥–µ—à—å –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ, —Ç–æ –∫—Ç–æ –±—É–¥–µ—Ç?", reply_markup=keyboard.as_markup())


@day_router15.callback_query(Text(text="Balance|15"))
@is_now_day(15)
async def balance_day15(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    await Users_stat(message.from_user.id).edit_user_end_day()
    await message.message.answer("–ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å–µüëê")
