import asyncio
from datetime import datetime, timedelta

from aiogram import types, Router, F, Bot
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import any_state
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.answers import Answers
from db.users_stat import Users_stat
from handlers.user_handlers import start_LLIC
from settings import InputMessage, sticker_ids
from utils.is_now_day import is_now_day

day_router12 = Router()


@day_router12.callback_query(Text(text="confirm|12"), any_state)
@is_now_day(12)
async def start_day12(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    await message.message.edit_reply_markup()
    await state.clear()
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–û–∫–µ–π, —Å–¥–µ–ª–∞—é", callback_data="OKAY_DO|12"))
    await message.message.answer("–°–æ–∑–¥–∞–π –≥–¥–µ-–Ω–∏–±—É–¥—å —Ç–∞–±–ª–∏—á–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ 5 –∫–æ–ª–æ–Ω–æ–∫ ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ —Å—Ç—Ä–µ—Å—Å–∞, –º—ã—Å–ª–∏, –æ—â—É—â–µ–Ω–∏—è –≤ —Ç–µ–ª–µ, —ç–º–æ—Ü–∏–∏ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è —Å—Ç—Ä–µ—Å—Å–æ–≤–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏. –ü–µ—Ä–µ–Ω–µ—Å–∏ —Ç—É–¥–∞ —Å–≤–æ–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è. –ï—Å–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–∏—á–∏–Ω—ã –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å –∏–ª–∏ —Å—Ö–æ–∂–∏ –ø–æ —Å–≤–æ–µ–π —Å—É—Ç–∏, –º–æ–∂–µ—à—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∏—Ö –≤ –≥—Ä—É–ø–ø—É. –ü–æ—Å–ª–µ –ø–æ–ø—Ä–æ–±—É–π –ø—Ä–æ—Å–ª–µ–¥–∏—Ç—å –ø–æ—Ö–æ–∂–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ –ª—é–±–æ–º—É –ø—Ä–∏–∑–Ω–∞–∫—É: –±—É–¥—å —Ç–æ –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ —ç–º–æ—Ü–∏—è –∏–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Å–ø–æ—Å–æ–± —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä–µ—Å—Å-—Ñ–∞–∫—Ç–æ—Ä. –í–æ–∑–º–æ–∂–Ω–æ, –≤ —Ç–≤–æ–µ–π —É—á–µ–±–Ω–æ–π –∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–¥–Ω–∞ –Ω–µ–¥–µ–ª—è –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –¥—Ä—É–≥–æ–π –∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –¥–∞–Ω–Ω—ã—Ö –æ–¥–Ω–æ–π –Ω–µ–¥–µ–ª–∏ –±—É–¥–µ—Ç –∫–∞–∑–∞—Ç—å—Å—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –ö–∞–∫ –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ, –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏ –¥–∞–ª—å—à–µ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –ø—Ä–∏—á–∏–Ω–∞–º–∏ —Å—Ç—Ä–µ—Å—Å–∞ –∏ –∏—Ö —Ä–µ–∞–∫—Ü–∏—è–º–∏, –∞ —É–∂–µ –∑–∞–≤—Ç—Ä–∞ –º—ã –ø–æ–¥–µ–ª–∏–º—Å—è, —á—Ç–æ —Å –Ω–∏–º–∏ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µüëê", reply_markup=keyboard.as_markup())


@day_router12.callback_query(Text(text="OKAY_DO|12"), any_state)
@is_now_day(12)
async def start_day12(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    await message.message.edit_reply_markup()
    now = datetime.now()
    target_time = datetime(now.year, now.month, now.day, 21, 0)
    if now >= target_time:
        target_time += timedelta(days=1)
    time_difference = target_time - now
    await message.message.answer("–í–µ—á–µ—Ä–æ–º –≤–µ—Ä–Ω–µ–º—Å—è —Å —Ä–∞—Å—Å–ø—Ä–æ—Å–∞–º–∏üòÑ")
    await asyncio.sleep(time_difference.total_seconds())
    question = await message.message.answer("–ß—Ç–æ —É–¥–∞–ª–æ—Å—å –∑–∞–º–µ—Ç–∏—Ç—å?")
    await state.set_state(InputMessage.input_answer_state12_2)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router12.message(F.text, InputMessage.input_answer_state12_2)
@is_now_day(12)
async def answer_day11_5(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    await state.clear()
    await message.answer_sticker(sticker=sticker_ids[-1])
    await start_LLIC(message, state, bot)
    # await message.answer_sticker()


