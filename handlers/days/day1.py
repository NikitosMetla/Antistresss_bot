from aiogram import Router, types, Bot, F
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.types import BufferedInputFile, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.answers import Answers
from db.users_stat import Users_stat
from handlers.user_handlers import start_LLIC
from settings import start_text, InputMessage
from utils.is_now_day import is_now_day

day_router2 = Router()


@day_router2.callback_query(Text(text="confirm|2"))
@is_now_day(2)
async def start_day1(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    if int(str(await Users_stat(message.from_user.id).get_user_day())) == int(message.data.split("|")[1]):
        text = """–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —Ç—ã –≤ —Ç–æ—á–∫–µ –ê: —Å–ø–æ–∫–æ–π–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—à—å —Ä–∞–±–æ—á–∏–µ –∑–∞–¥–∞—á–∫–∏, –æ—Ç–≤–ª–µ–∫–∞—è—Å—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö –∏–ª–∏ small talks —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ ‚Äî —ç—Ç–æ —Ç–≤–æ–π –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–∞–±–æ—á–∏–π —Ä–µ–∂–∏–º. –ò —Ç—É—Ç —Ç–µ–±–µ –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è: ¬´–°—Ä–æ—á–Ω–æ! –ù–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Ç–æ-—Ç–æ –∏ —Ç–æ-—Ç–æ, –∏–Ω–∞—á–µ ‚Ä¶¬ª. –£ —Ç–µ–±—è –Ω–∞—á–∏–Ω–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –±–∏—Ç—å—Å—è —Å–µ—Ä–¥—Ü–µ, —Å–æ–∑–Ω–∞–Ω–∏–µ —Å—É–∂–∞–µ—Ç—Å—è –¥–æ –æ–¥–Ω–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –º—ã—Å–ª–∏ –æ –ø—Ä–∏–ª–µ—Ç–µ–≤—à–µ–º –ø–æ—Ä—É—á–µ–Ω–∏–∏, –∞ —Ç—Ä–µ–≤–æ–≥–∞, –∫–∞–∂–µ—Ç—Å—è, –Ω–∞–∫—Ä—ã–≤–∞–µ—Ç —Å –≥–æ–ª–æ–≤–æ–π –∏ —Ç—ã –∑–∞–º–∏—Ä–∞–µ—à—å –≤ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–∏ –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è (—Å–µ–∫—É–Ω–¥—ã, –º–∏–Ω—É—Ç—ã, –∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–∞–∂–µ —á–∞—Å—ã‚Ä¶)
    
–≠—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç–∞–¥–∏—è –≤ –¥–∏–Ω–∞–º–∏–∫–µ —Ä–∞–∑–≤–∏—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è alarm reaction, –∏–ª–∏ —Å—Ç–∞–¥–∏—è —Ç—Ä–µ–≤–æ–≥–∏. –ó–¥–µ—Å—å —Ç–≤–æ—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç, –∞ –æ—Ä–≥–∞–Ω–∏–∑–º –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º—É —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—é
    
–î–∞–ª—å—à–µ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —Å—Ç–∞–¥–∏—è —Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ (–æ—Ç –ª–∞—Ç. resistentia ‚Äî —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ) –∏ —Ç—É—Ç –≤–æ–∑–º–æ–∂–Ω—ã –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–±—ã—Ç–∏–π: —Ç—ã –ª–∏–±–æ —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –∏ –Ω–∞—á–∏–Ω–∞–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–¥–≤–æ–µ–Ω–Ω–æ–π —Å–∏–ª–æ–π, –ª–∏–±–æ —Ç–µ—Ä—è–µ—à—å—Å—è, –Ω–∞—á–∏–Ω–∞–µ—à—å —Å–æ–≤–µ—Ä—à–∞—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–ª–∏ –≤–æ–≤—Å–µ –∑–∞–º–∏—Ä–∞–µ—à—å, –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—è. –ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî —ç—Ç–æ —ç—É—Å—Ç—Ä–µ—Å—Å, –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ (—Å—Ç—Ä–µ—Å—Å) —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∞–∫—Ç–∏–≤–∏–∑–∞—Ü–∏–∏ –Ω–µ —Ç–æ–ª—å–∫–æ —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –Ω–æ –∏ –º—ã—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –ø–∞–º—è—Ç–∏, –≤–Ω–∏–º–∞–Ω–∏—è, –ø–æ–≤—ã—à–∞—è —É—Ä–æ–≤–µ–Ω—å —Ç–≤–æ–µ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ù–∞–º –æ–±—ã—á–Ω–æ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Å—Ç—Ä–µ—Å—Å ‚Äî —ç—Ç–æ —á—Ç–æ-—Ç–æ –≤—Ä–µ–¥–Ω–æ–µ, –Ω–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –æ–Ω —Ç–µ–±–µ –ø–æ–º–æ–≥–∞–µ—Ç, —Ç–∞–∫ –∂–µ –∫–∞–∫ –∏ –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–∫–∞–Ω—É–Ω–µ –¥–µ–¥–ª–∞–π–Ω–∞
    
–û–¥–Ω–∞–∫–æ –≤–æ–∑–º–æ–∂–µ–Ω –∏ –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ–≥–¥–∞ –≤—ã—Å–æ–∫–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—é –æ—à–∏–±–æ–∫, –ª–∏—à–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏—è–º –∏–ª–∏ –≤–æ–≤—Å–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ß–∞—Å—Ç–æ –ª—é–¥–∏, –≥–æ–≤–æ—Ä—è –æ —Å—Ç—Ä–µ—Å—Å–µ, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –∏–º–µ–Ω–Ω–æ —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –í –Ω–∞—É–∫–µ —ç—Ç–æ –Ω–∞–∑—ã–≤–∞—é—Ç –¥–∏—Å—Ç—Ä–µ—Å—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π, –µ—Å–ª–∏ —Ä–µ—à–µ–Ω–∏–µ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∏—Å—Ç–æ—â–µ–Ω–∏–µ
    
–ó–∞—Ç—è–Ω—É–≤—à–∞—è—Å—è —Å—Ç–∞–¥–∏—è –∏—Å—Ç–æ—â–µ–Ω–∏—è –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏ —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º. –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å, —Ç—Ä–µ–≤–æ–≥–∞, —Å–∏–Ω–¥—Ä–æ–º ¬´–≤—ã–≥–æ—Ä–∞–Ω–∏—è¬ª, –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º, –∞—Å—Ç–µ–Ω–∏—è, –±–æ–ª–µ–∑–Ω–∏ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã‚Ä¶–°–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å, –≤–µ–¥—å —Å—Ç—Ä–µ—Å—Å –≤–æ–∑–¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤–µ—Å—å –æ—Ä–≥–∞–Ω–∏–∑–º
    
–ò —Ç—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –Ω–µ –¥–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ–≥–æ, –≤–µ—Ä–Ω–æ?
    
–î–∞–≤–∞–π –ø–µ—Ä–µ–π–¥–µ–º –æ—Ç —Ç–µ–æ—Ä–∏–∏ –∫ –ø—Ä–∞–∫—Ç–∏–∫–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –¥–∏–Ω–∞–º–∏–∫—É —Ä–∞–∑–≤–∏—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞ –Ω–∞ —Ç–≤–æ—ë–º –ø—Ä–∏–º–µ—Ä–µüòâ –í—Å–ø–æ–º–Ω–∏, –∫–æ–≥–¥–∞ —Ç—ã –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –∏—Å–ø—ã—Ç—ã–≤–∞–ª —Å—Ç—Ä–µ—Å—Å (=—Å—Ç–∞–ª–∫–∏–≤–∞–ª—Å—è —Å–æ —Å–ª–æ–∂–Ω–æ–π –∏–ª–∏/–∏ –∑–Ω–∞—á–∏–º–æ–π –∑–∞–¥–∞—á–µ–π)
    """
        keyboard = InlineKeyboardBuilder()
        keyboard.row(InlineKeyboardButton(text="–£–≥—É, –≤—Å–ø–æ–º–Ω–∏–ª", callback_data="Remember_1"))
        await state.clear()
        await message.message.answer(text=text, reply_markup=keyboard.as_markup())


@day_router2.callback_query(Text(text="Remember_1"))
@is_now_day(2)
async def start_day1(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    question = await message.message.answer("–ß—Ç–æ —Ç—ã –∏—Å–ø—ã—Ç—ã–≤–∞–ª, –∫–æ–≥–¥–∞ —Ç–æ–ª—å–∫–æ —É—Å–ª—ã—à–∞–ª –æ –ø—Ä–æ–±–ª–µ–º–µ?")
    await state.set_state(InputMessage.input_answer_state2)
    await state.update_data(question=str(await Users_stat(message.from_user.id).get_user_day()) + ". " + question.text)


@day_router2.message(F.text, InputMessage.input_answer_state2)
@is_now_day(2)
async def answer_start2(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    question = data.get("question")
    answers = Answers()
    await answers.add_answer(question=question, answer=message.text, user_id=message.from_user.id)
    await state.clear()
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text=" –°—Ç—Ä–µ—Å—Å –ø—Ä–∏–¥–∞–ª –º–Ω–µ —Å–∏–ª üí™", callback_data="Remember_1_2"))
    keyboard.row(InlineKeyboardButton(text="–í—Å—ë –ø—Ä–æ–ø–∞–ª–æ‚Ä¶", callback_data="Remember_1_2"))
    await message.answer("–ê –∫–∞–∫ —Ä–∞–∑–≤–∏–≤–∞–ª–∞—Å—å –∏—Å—Ç–æ—Ä–∏—è –¥–∞–ª—å—à–µ? –¢—ã —Å—Ç–∞–ª –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º –∏–ª–∏, –Ω–∞–æ–±–æ—Ä–æ—Ç, –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–º?", reply_markup=keyboard.as_markup())


@day_router2.callback_query(Text(text="Remember_1_2"))
@is_now_day(2)
async def start_day1(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–í–µ—Ä–Ω—É–ª—Å—è –∫ —Ä–∞–±–æ—á–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é", callback_data="Remember_1_3"))
    keyboard.row(InlineKeyboardButton(text="–ó–∞—Å—Ç—Ä—è–ª –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏", callback_data="Remember_1_3"))
    await message.message.answer("–°–ª–µ–¥–æ–º —Ç—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–∞–±–æ—á–∏–π —Ä–µ–∂–∏–º –∏–ª–∏ –∑–∞—Å—Ç—Ä—è–ª –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è?", reply_markup=keyboard.as_markup())


@day_router2.callback_query(Text(text="Remember_1_3"))
@is_now_day(2)
async def start_day1(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    await message.message.answer("üëå")
    await message.message.answer("–°–µ–≥–æ–¥–Ω—è —Ç—ã —É–∑–Ω–∞–ª–∞, —á—Ç–æ —Å—Ç—Ä–µ—Å—Å ‚Äî –Ω–µ –≤—Å–µ–≥–¥–∞ –∑–ª–æüòÅ –ê –µ—â—ë –æ–Ω –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è 3 —Å—Ç–∞–¥–∏–∏ (—Ç—Ä–µ–≤–æ–≥–∏, —Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ –∏—Å—Ç–æ—â–µ–Ω–∏—è), –∫–∞–∂–¥–æ–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω—ã —Å–≤–æ–∏ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è, –∏ –æ –Ω–∏—Ö –º—ã –µ—â—ë –ø–æ–≥–æ–≤–æ—Ä–∏–º, –Ω–æ –∑–∞–≤—Ç—Ä–∞üòâ–î–∞–≤–∞–π –µ—â—ë –±—ã—Å—Ç—Ä–µ–Ω—å–∫–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —É —Ç–µ–±—è —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º")
    await start_LLIC(message, state, bot)


"""agfajskdhlf;sjhgdfsakgjkhjfvdbafjskglkjlkjfhjdbjfkslgkldkjfdnfkslgd"""



